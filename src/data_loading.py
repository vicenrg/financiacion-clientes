
# =============================================================
# üì¶ src/data_loading.py ‚Äî Funciones auxiliares para carga inicial
# Autor: Vicente Rueda
# Usa rutas absolutas robustas con pathlib.
# =============================================================

from pathlib import Path
import pandas as pd
from utils import get_file_path

# -------------------------------------------------------------
# üìÅ Mostrar primeras l√≠neas de un archivo de texto plano
# -------------------------------------------------------------
# üìå Aqu√≠ define qu√© hace la funci√≥n:
# Muestra por consola las primeras l√≠neas del archivo como texto plano (formato CSV).
# -------------------------------------------------------------
def mostrar_primeras_lineas(folder_key, filename, n=5, ancho_max=400):
    ruta = get_file_path(folder_key, filename)
    print(f"\nüìë Primeras {n} l√≠neas de: {ruta}\n")
    try:
        with ruta.open('r', encoding='utf-8') as archivo:
            for i, linea in enumerate(archivo):
                print(linea.strip()[:ancho_max])
                if i + 1 == n:
                    break
    except FileNotFoundError:
        print(f"‚ùå Archivo no encontrado: {ruta}")
    except Exception as e:
        print(f"‚ùå Error al leer archivo: {e}")


# -------------------------------------------------------------
# üìä Verificar si hay riesgo de sobreajuste por dimensionalidad
# -------------------------------------------------------------
# Eval√∫a si la relaci√≥n registros/variables es adecuada para evitar sobreajuste.
# -------------------------------------------------------------
def verificar_dimensionalidad(df, umbral=100):
    n_registros, n_variables = df.shape
    print("\nüìä Verificaci√≥n de la dimensionalidad:")
    if n_registros >= n_variables * umbral:
        print(f"‚úÖ Adecuado: {n_registros} registros ‚â• {n_variables} variables x {umbral}")
        print("   No se detectan problemas de sobreajuste por alta dimensionalidad.")
    else:
        print(f"‚ö†Ô∏è Posible sobreajuste: {n_registros} < {n_variables} x {umbral}")
    print(f"üìà Ratio registros/variable: {n_registros / n_variables:.2f}\n")







